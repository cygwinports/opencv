inherit python cmake

NAME="opencv"
VERSION=2.4.2
RELEASE=1
CATEGORY="Graphics"
SUMMARY="Real-time computer vision library"
DESCRIPTION="OpenCV (Open Source Computer Vision) is a library of programming
functions for real time computer vision. Example applications of the OpenCV
library are Human-Computer Interaction; Object Identification, Segmentation and
Recognition; Face Recognition; Gesture Recognition; Camera and Motion Tracking,
Ego Motion, Motion Understanding; Structure From Motion; Stereo and
Multi-Camera Calibration and Depth Computation; Mobile Robotics."
HOMEPAGE="http://opencv.willowgarage.com/"
SRC_URI="mirror://sourceforge/opencvlibrary/OpenCV-${PV}.tar.bz2"
SRC_DIR="OpenCV-${PV%[a-z]}"

PATCH_URI="
	2.3.1-python-module.patch
	2.4.2-compile.patch
	2.3.1-cygwin.patch
"

PKG_NAMES="libopencv2.4 libopencv-devel python-cv"
libopencv2_4_SUMMARY="${SUMMARY} (runtime)"
libopencv2_4_CONTENTS="usr/bin/*-2.4.dll usr/share/doc/"
libopencv_devel_SUMMARY="${SUMMARY} (development)"
libopencv_devel_CONTENTS="--exclude=${PYTHON_LIB#/} usr/bin/*.exe usr/include/ usr/lib/ usr/share/OpenCV/"
python_cv_SUMMARY="${SUMMARY} (Python bindings)"
python_cv_CONTENTS=${PYTHON_SITELIB#/}

# Is there really a need to use THREE different multimedia frameworks?
#   FFmpeg: used for file decoding and encoding
#   GStreamer: used for 1394/v4l video capture
#   Xine: used for file decoding
# Therefore we use just FFmpeg (which is also the default in autotools)
CYGCMAKE_ARGS="
	-DBUILD_NEW_PYTHON_SUPPORT=ON
	-DBUILD_TESTS=OFF
	-DPYTHON_PACKAGES_PATH=${PYTHON_SITELIB}
	-DWITH_1394=OFF
	-DWITH_FFMPEG=ON
	-DWITH_GSTREAMER=OFF
	-DWITH_UNICAP=OFF
	-DWITH_V4L=OFF
	-DWITH_XINE=OFF
"

src_test() {
	cd ${B}/bin
	for x in ./opencv_test_*
	do
		$x || true
	done
}

src_install() {
	cd ${B}
	cyginstall
	python_optimize

	sed -e 's|${exec_prefix}/lib/cyg|-l|g;s/-[0-9]\.[0-9]\.dll//g' \
	    -i ${D}/usr/lib/pkgconfig/opencv.pc
}
