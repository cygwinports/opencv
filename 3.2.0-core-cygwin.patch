--- origsrc/opencv-3.2.0/modules/core/src/opencl/runtime/opencl_core.cpp	2016-12-23 06:54:44.000000000 -0600
+++ src/opencv-3.2.0/modules/core/src/opencl/runtime/opencl_core.cpp	2017-05-04 16:27:50.108621400 -0500
@@ -129,7 +129,7 @@ static void* WinGetProcAddress(const cha
 #define CV_CL_GET_PROC_ADDRESS(name) WinGetProcAddress(name)
 #endif // _WIN32
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
 #include <dlfcn.h>
 #include <stdio.h>
 
@@ -142,7 +142,11 @@ static void* GetProcAddress(const char*
         cv::AutoLock lock(cv::getInitializationMutex());
         if (!initialized)
         {
+#ifdef __CYGWIN__
+            const char* path = "cygOpenCL-1.dll";
+#else
             const char* path = "libOpenCL.so";
+#endif
             const char* envPath = getenv("OPENCV_OPENCL_RUNTIME");
             if (envPath)
                 path = envPath;
--- origsrc/opencv-3.2.0/modules/core/src/parallel.cpp	2016-12-23 06:54:44.000000000 -0600
+++ src/opencv-3.2.0/modules/core/src/parallel.cpp	2017-05-04 14:04:03.458749100 -0500
@@ -50,7 +50,7 @@
     #undef abs
 #endif
 
-#if defined __linux__ || defined __APPLE__
+#if defined __linux__ || defined __APPLE__ || defined __CYGWIN__
     #include <unistd.h>
     #include <stdio.h>
     #include <sys/types.h>
@@ -562,7 +562,7 @@ int cv::getNumberOfCPUs(void)
 #elif defined ANDROID
     static int ncpus = getNumberOfCPUsImpl();
     return ncpus;
-#elif defined __linux__
+#elif defined __linux__ || defined __CYGWIN__
     return (int)sysconf( _SC_NPROCESSORS_ONLN );
 #elif defined __APPLE__
     int numCPU=0;
--- origsrc/opencv-3.2.0/modules/core/src/system.cpp	2016-12-23 06:54:44.000000000 -0600
+++ src/opencv-3.2.0/modules/core/src/system.cpp	2017-05-04 14:05:44.614367900 -0500
@@ -198,7 +198,7 @@ std::wstring GetTempFileNameWinRT(std::w
 
 #include <stdarg.h>
 
-#if defined __linux__ || defined __APPLE__ || defined __EMSCRIPTEN__ || defined __FreeBSD__
+#if defined __linux__ || defined __APPLE__ || defined __EMSCRIPTEN__ || defined __FreeBSD__ || defined __CYGWIN__
 #include <unistd.h>
 #include <stdio.h>
 #include <sys/types.h>
@@ -414,7 +414,7 @@ int64 getTickCount(void)
     LARGE_INTEGER counter;
     QueryPerformanceCounter( &counter );
     return (int64)counter.QuadPart;
-#elif defined __linux || defined __linux__
+#elif defined __linux || defined __linux__ || defined __CYGWIN__
     struct timespec tp;
     clock_gettime(CLOCK_MONOTONIC, &tp);
     return (int64)tp.tv_sec*1000000000 + tp.tv_nsec;
